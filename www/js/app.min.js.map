{"version":3,"sources":["app.js","app.dev.js","controllers.js","directives.js","filters.js","img-cloudinary.js","services.js","db-firebase/application.js","db-firebase/auth.js","db-firebase/base.js","db-firebase/db.js","db-firebase/dinner.js","db-firebase/user.js"],"names":["angular","module","config","$stateProvider","state","url","abstract","templateUrl","views","mainContent","dc","run","$ionicPlatform","ready","window","cordova","plugins","Keyboard","hideKeyboardAccessoryBar","StatusBar","styleDefault","$urlRouterProvider","controller","onEnter","logout","otherwise","moment","tz","setDefault","c","console","log","$scope","db","$rootScope","$state","login","user","signup","auth","createUser","then","userId","firstName","lastName","email","create","error","bindPending","password","code","resumeSession","update","mapCreated","map","$stateParams","getUserData","getUserDinners","dinners","util","dinner","isPublic","hostedByUser","go","fromNow","takeawayFrom","now","takeawayUntil","getAll","getBeginTime","time","dinein","enabled","takeaway","from","application","count","get","dinnerId","directive","restrict","scope","onCreate","link","$element","initialize","mapOptions","center","google","maps","LatLng","zoom","mapTypeId","MapTypeId","ROADMAP","streetViewControl","Map","event","addDomListener","e","preventDefault","document","readyState","element","attr","dot","className","showClassName","html","append","$watch","pendingDots","newVal","addClass","removeClass","f","filter","factory","$http","upload","file","data","FormData","post","headers","Content-Type","s","friends","id","name","all","friendId","$q","getCurrentSession","uid","offsetMins","n","Date","d","getTime","getTimezoneOffset","promise","done","value","dbBase","app","fb","ref","root","credentials","resolve","reject","authWithPassword","session","onAuth","offAuth","unauth","getAuth","Firebase","$firebase","checkObject","obj","properties","settings","checkArguments","undefined","Error","Array","isArray","prototype","slice","call","arguments","forEach","p","createError","message","getRefURL","toString","unauthorized","notFound","query","set","push","newRef","key","once","dataSnapshot","val","base","Object","assign","child","review","orderByKey","equalTo","_","keys","first","values","getMessages","orderByChild","getReviews","createMessage","cloneDeep","createdAt","ServerValue","TIMESTAMP","close","updatedAt","closedAt","cancel","cancelledAt","acceptApplication","applicationId","status","rejectApplication","createApplication","createReview","toGroup","notification","updateSettings","createImage","deleteImage","reorderImage","getFriends","getNotifications"],"mappings":"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","file":"app.min.js","sourcesContent":["// angular.module is a global place for creating, registering and retrieving Angular modules\n// 'starter' is the name of this angular module example (also set in a <body> attribute in index.html)\n// the 2nd parameter is an array of 'requires'\n// 'starter.services' is found in services.js\n// 'starter.controllers' is found in controllers.js\n\nvar dc = angular.module('dc', ['ionic', 'dc.controllers', 'dc.services', 'dc.filters', 'dc.db', 'dc.directives', 'dc.dev']);\n\n\n// ionic setup\ndc.run(function($ionicPlatform) {\n   $ionicPlatform.ready(function() {\n      // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard\n      // for form inputs)\n      if (window.cordova && window.cordova.plugins.Keyboard) {\n         cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\n      }\n      /* global StatusBar */\n      if (window.StatusBar) {\n         // org.apache.cordova.statusbar required\n         StatusBar.styleDefault();\n      }\n   });\n});\n\n\n// app states (ui-router)\ndc.config(function($stateProvider, $urlRouterProvider) {\n\n   // Ionic uses AngularUI Router which uses the concept of states\n   // Learn more here: https://github.com/angular-ui/ui-router\n   // Set up the various states which the app can be in.\n   // Each state's controller can be found in controllers.js\n   $stateProvider\n\n   .state('login', {\n      url: '/login',\n      templateUrl: 'templates/login.html',\n      controller: 'LoginCtrl'\n   })\n\n   .state('logout', {\n      url: '/logout',\n      onEnter: function(logout) {\n         logout();\n      }\n   })\n\n   .state('signup', {\n      url: '/signup',\n      templateUrl: 'templates/signup.html',\n      controller: 'SignupCtrl'\n   })\n\n   .state('app', {\n      url: '/app',\n      abstract: true,\n      templateUrl: 'templates/menu.html',\n      controller: 'AppCtrl'\n   })\n\n   .state('app.settings', {\n      url: '/settings',\n      views: {\n         'mainContent': {\n            templateUrl: 'templates/settings.html',\n            controller: 'SettingsCtrl'\n         }\n      }\n   })\n\n   .state('app.newdinner', {\n      url: \"/newdinner\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/newdinner.html\",\n            controller: \"NewDinnerCtrl\"\n         }\n      }\n   })\n\n   .state('app.lookfor', {\n      url: \"/lookfor\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/lookfor.html\",\n            controller: 'LookForDinnersCtrl'\n         }\n      }\n   })\n\n   .state('app.user', {\n      url: \"/user/:userId\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/profile.html\",\n            controller: 'UserCtrl'\n         }\n      }\n   })\n\n   .state('app.dinner', {\n      url: \"/dinner/:dinnerId\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/dinner.html\",\n            controller: 'DinnerCtrl'\n         }\n      }\n   });\n\n\n   $stateProvider\n   .state('test', {\n      url: '/test',\n      abstract: true,\n      templateUrl: 'templates/menu.html',\n      controller: 'AppCtrl'\n   })\n   .state('test.tabs', {\n      url: \"/tabs\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/test/tabs.html\"\n         }\n      }\n   });\n\n\n   // if none of the above states are matched, use this as the fallback\n   $urlRouterProvider.otherwise('/login');\n});\n\n\n// timezone support\ndc.run(function () {\n   /* global moment */\n   moment.tz.setDefault('Europe/Vienna');\n});\n","\nangular.module( 'dc.dev', [] )\n\n.config(function($stateProvider) {\n   $stateProvider\n\n   .state('dev', {\n      url: '/dev',\n      abstract: true,\n      templateUrl: 'templates/menu.html'\n   })\n\n   .state('dev.menu', {\n      url: \"/menu\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/developer.html\"\n         }\n      }\n   })\n\n   .state('dev.login', {\n      url: \"/login\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/login.html\"\n         }\n      }\n   })\n\n   .state('dev.signup', {\n      url: \"/signup\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/signup.html\"\n         }\n      }\n   })\n\n   .state('dev.newdinner', {\n      url: \"/newdinner\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/newdinner.html\"\n         }\n      }\n   })\n\n   .state('dev.lookfor', {\n      url: \"/lookfor\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/lookfor.html\"\n         }\n      }\n   })\n\n   .state('dev.lookfor_filter', {\n      url: \"/lookfor_filter\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/lookfor_filter.html\"\n         }\n      }\n   })\n\n   .state('dev.profile', {\n      url: \"/profile\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/profile.html\"\n         }\n      }\n   })\n\n   .state('dev.dinner', {\n      url: \"/dinner\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/dinner.html\"\n         }\n      }\n   })\n\n   .state('dev.settings', {\n      url: \"/settings\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/settings.html\"\n         }\n      }\n   })\n\n   .state('dev.notifications', {\n      url: \"/notifications\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/notifications.html\"\n         }\n      }\n   })\n\n   .state('dev.dinner_list', {\n      url: \"/dinner_list\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/dinner_list.html\"\n         }\n      }\n   })\n\n   .state('dev.person_list', {\n      url: \"/person_list\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/person_list.html\"\n         }\n      }\n   })\n\n   .state('dev.person_list_interactive', {\n      url: \"/person_list_interactive\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/person_list_interactive.html\"\n         }\n      }\n   })\n\n   .state('dev.confirm_application', {\n      url: \"/confirm_application\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/confirm_application.html\"\n         }\n      }\n   });\n\n});\n","var c = angular.module( 'dc.controllers', ['dc.services'] );\n\n\n// c.controller('AppCtrl', function($scope, $ionicModal, $timeout) {\nc.controller('AppCtrl', function() {\n\tconsole.log('Controller: app');\n});\n\n\n/**\n * Sign up\n */\nc.controller('SignupCtrl', function($scope, db, $rootScope, $state, login) {\n\tconsole.log('Controller: signup');\n\t$scope.user = {};\n\n\t$scope.signup = function() {\n\t\tconsole.log('signing up', $scope.user);\n\t\tvar user;\n\t\tdb.auth.createUser($scope.user)\n\t\t.then(function(userId) {\n\t\t\tuser = {\n\t\t\t\tuserId: userId,\n\t\t\t\tfirstName: $scope.user.firstName,\n\t\t\t\tlastName: $scope.user.lastName,\n\t\t\t\temail: $scope.user.email\n\t\t\t};\n\t\t\treturn db.user.create(user);\n\t\t}).then(function() {\n\t\t\tconsole.log('signup successful');\n\t\t\tlogin($scope.user);\n\t\t}).catch(function (error) {\n\t\t\tconsole.error('error signing up', error);\n\t\t});\n\t};\n});\n\n\n/**\n * Log in\n */\nc.controller('LoginCtrl', function($scope, login, bindPending) {\n\tconsole.log('Controller: login');\n\n\t$scope.user = {};\n\t$scope.user = {\n\t\t'email': 'jd@example.com',\n\t\t'password': 'asdf'\n\t};\n\n\t$scope.login = function() {\n\t\tbindPending( login($scope.user), $scope )\n\t\t.catch(function(error) {\n\t\t\t$scope.error = error.code;\n\t\t\tthrow error;\n\t\t});\n\t};\n});\n\n\n/**\n * Settings\n */\nc.controller('SettingsCtrl', function($scope, db, $rootScope, $state, resumeSession) {\n\tconsole.log('Controller: settings');\n\tresumeSession($scope);\n\n\t$scope.update = function() {\n\t\tconsole.log('updating user');\n\t\tdb.user.update($scope.user).then(function() {\n\t\t\tconsole.log('update successful');\n\t\t}, function(error) {\n\t\t\tconsole.error('update failed', error);\n\t\t});\n\t};\n\n\t$scope.mapCreated = function(map) {\n\t\t$scope.map = map;\n\t};\n});\n\n\n/* User Profile */\nc.controller('UserCtrl', function($scope, db, resumeSession, $stateParams) {\n\tresumeSession($scope);\n\tdb.getUserData($stateParams.userId).then(function(user) {\n\t\t$scope.user = user;\n\t});\n\n\tdb.getUserDinners($stateParams.userId).then(function(dinners) {\n\t\t$scope.dinners = dinners;\n\t});\n});\n\n\n/* New Dinner */\nc.controller('NewDinnerCtrl', function($scope, db, $rootScope, $state, resumeSession, util) {\n\tconsole.log('Controller: newdinner');\n\tresumeSession($scope);\n\n\t$scope.dinner = {\n\t\tisPublic: true\n\t};\n\n\tif ($scope.user) {\n\t\t$scope.dinner.hostedByUser = $scope.user.userId;\n\t}\n\n\t$scope.create = function() {\n\t\tdb.dinner.create($scope.dinner).then(function() {\n\t\t\tconsole.log('Dinner created', $scope.dinner);\n\t\t\t$state.go('app.lookfor');\n\t\t}, function(error) {\n\t\t\tconsole.error('Error creating dinner', error);\n\t\t});\n\t};\n\n\t$scope.fromNow = function() {\n\t\t$scope.dinner.takeawayFrom = util.now();\n\t\t$scope.dinner.takeawayUntil = util.now(60);\n\t};\n});\n\n\n/* Look for  Dinner */\nc.controller('LookForDinnersCtrl', function($scope, db, resumeSession) {\n\tconsole.log('Controller: lookfor');\n\tresumeSession($scope);\n\t$scope.dinners = db.dinner.getAll().then(function (dinners) {\n\t\t$scope.dinners = dinners;\n\t\tconsole.log('dinners', $scope.dinners);\n\t});\n\n\t// TODO: remove this. use filter instead\n\t$scope.getBeginTime = function(dinner) {\n\t\tvar time;\n\t\tif (dinner.dinein && dinner.dinein.enabled) time = dinner.dinein.time;\n\t\telse if (dinner.takeaway && dinner.takeaway.enabled) time = dinner.takeaway.from;\n\t\treturn time;\n\t};\n});\n\n\n/* Dinner */\nc.controller('DinnerCtrl', function($scope, db, resumeSession, $stateParams) {\n\tconsole.log('Controller: dinner');\n\tresumeSession($scope);\n\n\t$scope.application = { count:1 };\n\n\t// $scope.dinner = db.getDinnerSync($stateParams.dinnerId);\n\tdb.dinner.get($stateParams.dinnerId).then(function (dinner) {\n\t\t$scope.dinner = dinner;\n\t\tconsole.log('dinner', dinner);\n\t});\n\n\t// $scope.applications = db.getDinnerApplicationsSync($stateParams.dinnerId);\n\n\t// $scope.addCount = function(count, min, max) {\n\t// \tvar newCount = $scope.application.count += count;\n\t// \tif (newCount < min) newCount = min;\n\t// \telse if (newCount > max) newCount = max;\n\t// \t$scope.application.count = newCount;\n\t// };\n\t//\n\t// $scope.apply = function(dinein) {\n\t// \tif (dinein) $scope.application.dinein = true;\n\t// \telse $scope.application.dinein = false;\n\t// \t$scope.application.userId = $scope.user.uid;\n\t// \t$scope.application.dinnerId = $scope.dinner.$id;\n\t// \tdb.newApplication($scope.application).then(function(application) {\n\t// \t\tconsole.log('application created:', application);\n\t// \t\t// $state.go('app.dinner', {dinnerId: application.dinnerId});\n\t// \t}, function(error) {\n\t// \t\tconsole.log('error creating application:', error);\n\t// \t});\n\t// };\n\t//\n\t// $scope.applicationState = function() {\n\t// \tvar state = \"\";\n\t// \tangular.forEach($scope.applications, function(application) {\n\t// \t\tif (application.userId === $scope.user.uid) {\n\t// \t\t\t//console.log(application);\n\t// \t\t\tstate = application.state;\n\t// \t\t\t$scope.application = application;\n\t// \t\t}\n\t// \t});\n\t// \treturn state;\n\t// };\n\t//\n\t// $scope.isHost = function() {\n\t// \treturn ($scope.user && $scope.dinner.user === $scope.user.uid);\n\t// };\n\t//\n\t// $scope.acceptApplication = function(a) {\n\t// \ta.state = 'accepted';\n\t// \tdb.updateApplicationState(a.$id, 'accepted').then(function() {\n\t// \t\tconsole.log('application accepted');\n\t// \t}, function(error) {\n\t// \t\tconsole.error('error accepting application', error);\n\t// \t});\n\t// };\n\t//\n\t// $scope.declineApplication = function(a) {\n\t// \ta.state = 'declined';\n\t// \tdb.updateApplicationState(a.$id, 'declined').then(function() {\n\t// \t\tconsole.log('application declined');\n\t// \t}, function(error) {\n\t// \t\tconsole.error('error declining application', error);\n\t// \t});\n\t// };\n});\n","angular.module('dc.directives', [])\n\n.directive('map', function() {\n   /* global google */\n   return {\n      restrict: 'E',\n      scope: {\n         onCreate: '&'\n      },\n      link: function($scope, $element) {\n         function initialize() {\n            var mapOptions = {\n               center: new google.maps.LatLng(48.2085, 16.373),\n               zoom: 16,\n               mapTypeId: google.maps.MapTypeId.ROADMAP,\n               streetViewControl: false\n            };\n            var map = new google.maps.Map($element[0], mapOptions);\n\n            $scope.onCreate({\n               map: map\n            });\n\n            // Stop the side bar from dragging when mousedown/tapdown on the map\n            google.maps.event.addDomListener($element[0], 'mousedown', function(e) {\n               e.preventDefault();\n               return false;\n            });\n         }\n\n         if (document.readyState === \"complete\") {\n            initialize();\n         } else {\n            google.maps.event.addDomListener(window, 'load', initialize);\n         }\n      }\n   };\n})\n\n// whenever the given expression is truthy show animated pending dots appended to the element\n.directive('pendingDots', function() {\n   return {\n      restrict: 'EA',\n      link: function(scope, element, attr) {\n         var dot = '.',\n         className = 'pending-dots',\n         showClassName = 'show-pending-dots',\n         html = '<span class=\"' + className + '\"><span class=\"dot-1\">' + dot + '</span><span class=\"dot-2\">' + dot + '</span><span class=\"dot-3\">' + dot + '</span></span>';\n         element.append(html);\n         scope.$watch(attr.pendingDots, function(newVal) {\n            if (newVal) element.addClass(showClassName);\n            else element.removeClass(showClassName);\n         });\n      }\n   };\n});\n","var f = angular.module('dc.filters', []);\n\n/* Compute the begin time of a dinner. */\nf.filter('getBeginTime', function() {\n   return function(dinner) {\n      var time;\n      if (dinner) {\n         if (dinner.dinein && dinner.dinein.enabled) {\n            time = dinner.dinein.time;\n         } else if (dinner.takeaway && dinner.takeaway.enabled) {\n            time = dinner.takeaway.from;\n         }\n      }\n      return time;\n   };\n});\n","angular.module('dc.img', [])\n\n.factory('img', ['$http', function($http) {\n    return {\n\n      upload(file) {\n         var data = new FormData();\n         data.append('file', file);\n         data.append('api_key', '762859598386344');\n         data.append('timestamp', '');\n         data.append('signature', '');\n\n         return $http.post({\n            url: 'https://api.cloudinary.com/v1_1/dinner-collective/image/upload',\n            headers: {\n               'Content-Type': 'multipart/form-data'\n            },\n            data\n         });\n      }\n\n   };\n}]);\n","var s = angular.module('dc.services', []);\n\n/**\n * A simple example service that returns some data.\n */\ns.factory('Friends', function() {\n\t// Might use a resource here that returns a JSON array\n\n\t// Some fake testing data\n\tvar friends = [\n\t\t{ id: 0, name: 'Scruff McGruff' },\n\t\t{ id: 1, name: 'G.I. Joe' },\n\t\t{ id: 2, name: 'Miss Frizzle' },\n\t\t{ id: 3, name: 'Ash Ketchum' }\n\t];\n\n\treturn {\n\t\tall: function() {\n\t\t\treturn friends;\n\t\t},\n\t\tget: function(friendId) {\n\t\t\t// Simple index lookup\n\t\t\treturn friends[friendId];\n\t\t}\n\t};\n});\n\ns.factory('resumeSession', function($rootScope, db, $q, $state) {\n\treturn function($scope) {\n\t\treturn db.auth.getCurrentSession()\n\t\t.then(function onFulfilled (userId) {\n\t\t\tif ($rootScope.user && $rootScope.user.uid === userId) {\n\t\t\t\t// no need to refetch user data\n\t\t\t\t$scope.user = $rootScope.user;\n\t\t\t\treturn $scope.user;\n\t\t\t} else {\n\t\t\t\tconsole.log('resuming session for user', userId);\n\t\t\t\t// fetch user data\n\t\t\t\tdb.user.get(userId).then(function(user) {\n\t\t\t\t\tconsole.log('resume successful', user);\n\t\t\t\t\t$rootScope.user = user;\n\t\t\t\t\t$scope.user = user;\n\t\t\t\t\treturn user;\n\t\t\t\t});\n\t\t\t}\n\t\t}).catch(function onRejected () {\n\t\t\t$state.go('app.login');\n\t\t});\n\t};\n});\n\ns.factory('util', function() {\n\treturn {\n\t\tnow: function(offsetMins) {\n\t\t\toffsetMins = offsetMins || 0;\n\t\t\tvar n = new Date();\n\t\t\tvar d = new Date( n.getTime() - n.getTimezoneOffset()*60000 + offsetMins*60000 );\n\t\t\t//return (d.toISOString()).substring(0,16); // text representation\n\t\t\treturn d;\n\t\t}\n\t};\n});\n\ns.factory('login', function($rootScope, db, $state) {\n\treturn function(user) {\n\t\tconsole.log(\"logging in\", user);\n\n\t\treturn db.auth.login(user).then(function(userId) {\n\t\t\tconsole.log(\"getting user\", userId);\n\t\t\tdb.user.get(userId).then(function (user) {\n\t\t\t\tconsole.log(\"login successful\", user);\n\t\t\t\t$rootScope.user = user;\n\t\t\t\t$state.go('app.settings');\n\t\t\t});\n\t\t}, function(error) {\n\t\t\tconsole.error('error logging in', error);\n\t\t\tthrow error;\n\t\t});\n\t};\n});\n\ns.factory('logout', function($rootScope, db, $state) {\n\treturn function() {\n\t\tconsole.log(\"logging out\");\n\t\t$rootScope.user = {}; // immediately remove user from scope\n\t\tdb.auth.logout().then(function() {\n\t\t\tconsole.log('logout sucessful');\n\t\t}, function (error) {\n\t\t\tconsole.error('error logging out', error);\n\t\t});\n\t\t$state.go('login'); // immediately go to login page\n\t};\n});\n\n// ping pending state of a promise to a variable $scope.name\ns.factory('bindPending', function() {\n\treturn function(promise, $scope, name) {\n\t\tif (!name) name = 'pending';\n\t\t// console.log(name);\n\n\t\tfunction done () {\n\t\t\tconsole.log('resetting isBusy');\n\t\t\t$scope[name] = false;\n\t\t}\n\t\tconsole.log('setting isBusy');\n\t\t$scope[name] = true;\n\n\t\treturn promise.then(function onResolve (value) {\n\t\t\tdone();\n\t\t\treturn value;\n\t\t}, function onReject (error) {\n\t\t\tdone();\n\t\t\tthrow error;\n\t\t});\n\t};\n});\n","angular.module('dc.db.application', ['dc.db.base'])\n\n.factory('dbApplication', ['dbBase', function(dbBase) {\n   var db = dbBase;\n   // var fb = db.ref.root;\n   // var ref = db.ref;\n\n   var app = {};\n   return app;\n}]);\n","angular.module('dc.db.auth', ['dc.db.base'])\n\n.factory('dbAuth', ['dbBase', '$q', function(dbBase, $q) {\n   var db = dbBase;\n   var fb = db.ref.root;\n   // var ref = db.ref;\n\n   /*\n    * AUTHENTICATION\n    *\n    * login user\n    * logout user\n    * current session\n    *\n    */\n\n   /**\n    * @typedef {Object} UserCredentials\n    * @property {string} email\n    * @property {string} password\n    */\n\n   var auth = {};\n   /**\n    * Create a new user\n    * @param {Object} user\n    * email, password\n    * @return {Promise} - user id on success. Error message on error.\n    */\n   auth.createUser = function (credentials) {\n      return $q(function resolver (resolve, reject) {\n         fb.createUser(credentials, function onComplete (error, user) {\n            if (error === null) {\n               resolve(user.uid);\n            } else {\n               reject(error);\n            }\n         });\n      });\n   };\n\n   /**\n    * Login a user with email and password.\n    * @param {UserCredentials} credentials\n    * email, password\n    * @return {Promise} - user id on success. error object on error.\n    */\n   auth.login = function (credentials) {\n      return $q(function resolver (resolve, reject) {\n        fb.authWithPassword(credentials, function onComplete (error, session) {\n          if (error === null) {\n             resolve(session.uid, session);\n          } else {\n             reject(error);\n          }\n        });\n      });\n   };\n\n   auth.logout = function () {\n      return $q(function resolver (resolve) {\n         fb.onAuth(function onAuth (session) {\n            if (session === null) {\n               fb.offAuth(onAuth);\n               resolve();\n            }\n         });\n         fb.unauth();\n      });\n   };\n\n   /**\n    * [getCurrentSession description]\n    * @return {Promise} - user id on success.\n    */\n   auth.getCurrentSession = function () {\n      return $q(function resolver (resolve, reject) {\n         var session = fb.getAuth(); // sync\n         // console.log('current session:', session);\n         if (session === null) {\n            // console.log('rejecting');\n            reject();\n         } else {\n            // console.log('resolving');\n            resolve(session.uid);\n         }\n      });\n   };\n\n   return auth;\n}]);\n","angular.module('dc.db.base', ['firebase'])\n\n// define firebase ref as value service so it can be overridden easily\n.value( 'fb', new Firebase(\"https://dinner-collective.firebaseio.com/\") )\n\n/*\n   dbBase contains:\n   ref\n   ref.root (=fb)\n   settings\n   util\n   query\n*/\n.factory('dbBase', ['$rootScope', '$q', '$firebase', 'fb', function($rootScope, $q, $firebase, fb) {\n   var ref = { root: fb }; // store firebase references. place the main ref in there as 'root' as well, even though is shorter just to use 'fb'\n\n   var db = {}; // the db interface to be exported (as 'db')\n   db.ref = ref; // make refs available for testing\n   db.settings = {};\n   db.settings.checkArguments = false; // set true to check arguments using the checkObject function\n\n   db.util = {};\n   /**\n    * Get current firebase URL. Used for testing.\n    * @return {String} - URL of the firebase reference currently in use.\n    */\n   db.util.getRefURL = function() {\n      return fb.toString();\n   };\n\n   // check that an object is defined and optionally has some defined properties\n   // properties can be given as array of strings or as separate string arguments\n   function checkObject (obj, properties) {\n      if ( ! db.settings.checkArguments ) return true;\n      // check obj itself\n      if ( typeof obj != 'object' || obj == undefined ) {\n         throw new Error(obj + ' is expected to be an object.');\n      }\n      // if properties is not given or is not an array, create the properties array from arguments\n      if ( properties == undefined || !Array.isArray(properties) ) { // == undefined tests for null and undefined\n         properties = Array.prototype.slice.call(arguments, 1);\n      }\n      // check properties\n      properties.forEach( function checkProperties (p) {\n         if ( obj[p] === undefined ) {\n            throw new Error(obj.p + ' is expected to be defined.');\n         }\n      });\n      return true;\n   }\n   db.util.checkObject = checkObject; // make it available for testing\n\n   // TODO: complete\n   // function checkObjectAlt(obj, propLists) {\n   //    if ( ! db.settings.checkArguments ) return true;\n   //    // check obj itself\n   //    if ( typeof obj != 'object' || obj == undefined ) {\n   //       throw new Error(obj + ' is expected to be an object.');\n   //    }\n   //\n   // }\n\n\n   function createError (name, message) {\n      var error = new Error(message);\n      error.name = name;\n      return error;\n   }\n   db.util.createError = createError;\n\n   db.error = {\n      unauthorized : 'UNAUTHORIZED',\n      notFound : 'NOT_FOUND'\n   };\n\n/*\n * queries can be grouped due to different criteria:\n * technical type (create, update, delete)\n * by context (the view where they might be used)\n * by the data they operate on (type created or returned)\n *\n * general API considerations\n */\n\n\n/**\n * TODO: return defined errors\n * TODO: move errors and util functions to a seperat file\n * TODO: firebase query helpers: push obj + return id, update object, get by id, get by child\n *\n */\n\n\n/**\n * @callback successCallback\n * @param result - The result.\n */\n\n/**\n * @callback errorCallback\n * @param reason - The rejection reason.\n */\n\n/**\n * @callback callback\n */\n\n/**\n * Calls one of the success or error callbacks asynchronously as soon as the result is available.\n * @typedef {function} thenFunction\n * @param {successCallback}\n * @param {errorCallback}\n * @returns {Promise} - This promise is fulfilled with the return value of either callback. It is rejected with the error if either callback throws an exception.\n */\n\n/**\n * Sugar for Promise.then(undefined, errorCallback)\n * @typedef {function} catchFunction\n * @param {errorCallback}\n * @returns {Promise} - This promise is fulfilled with the return value of the error callback.\n */\n\n/**\n * Calls the callback as soon as the promise is either fulfilled or rejected. Useful for cleanup.\n * @typedef {function} finallyFunction\n * @param {callback}\n */\n\n/**\n * Angular Promise. Usually from the $q service.\n * @typedef {Object} Promise\n * @property {thenFunction} then\n * @property {catchFunction} catch\n * @property {finallyFunction} finally\n */\n\n\n/*\n * generic firebase query functions\n * using angular promises\n */\ndb.query = {};\n\ndb.query.set = function set (ref, data) {\n   return $q(function resolver (resolve, reject) {\n      ref.set(data, function onComplete (error) {\n         if (error === null) {\n            resolve();\n         } else {\n            reject(error);\n         }\n      });\n   });\n};\n\ndb.query.push = function push (ref, data) {\n   return $q(function resolver (resolve, reject) {\n      var newRef = ref.push(data, function onComplete (error) {\n         if (error === null) {\n            resolve(newRef.key());\n         } else {\n            reject(error);\n         }\n      });\n   });\n};\n\ndb.query.update = function update (ref, data) {\n   return $q(function resolver (resolve, reject) {\n      ref.update(data, function onComplete (error) {\n         if (error === null) {\n            resolve();\n         } else {\n            reject(error);\n         }\n      });\n   });\n};\n\ndb.query.get = function get (ref) {\n   return $q(function resolver (resolve, reject) {\n      ref.once('value', function callback (dataSnapshot) {\n         var data = dataSnapshot.val();\n         if (data === null) {\n            reject( createError(db.error.notFound, 'db.query.get: no data.') );\n         } else {\n            resolve(data);\n         }\n      }, function cancelCallback (error) {\n         reject( createError(db.error.unauthorized, error.message) );\n      });\n   });\n};\n\n   return db;\n}]);\n","angular.module('dc.db', ['dc.db.base', 'dc.db.auth', 'dc.db.user', 'dc.db.dinner', 'dc.db.application'])\n\n.factory('db', ['dbBase', 'dbAuth', 'dbUser', 'dbDinner', 'dbApplication', function(base, auth, user, dinner, application) {\n   // augment base object\n   let db = Object.assign(base, { auth, user, dinner, application });\n   console.log(db);\n   return db;\n}]);\n","angular.module('dc.db.dinner', ['dc.db.base'])\n\n.factory('dbDinner', ['dbBase', '$q', function(dbBase, $q) {\n   var db = dbBase;\n   var fb = db.ref.root;\n   var ref = db.ref;\n   var checkObject = db.util.checkObject;\n\n   /*\n    * DINNER (All)\n    *\n    *\n    * basic info (title, description, address, time, ...)\n    * users that applied/were accepted/were rejected (mutally excl.)\n    * messages posted regarding this dinner\n    * reviews of this dinner\n    *\n    */\n\n\n   ref.dinner = fb.child('dinner');\n   ref.application = fb.child('application');\n   ref.message = fb.child('message');\n   ref.review = fb.child('review');\n   var dinner = {};\n\n   dinner.get = function (dinnerId) {\n      return db.query.get(\n         ref.dinner.orderByKey().equalTo(dinnerId)\n      ).then(function (obj) {\n         var id = _(obj).keys().first();\n         var dinner = _(obj).values().first();\n         dinner.dinnerId = id;\n         return dinner;\n      });\n   };\n\n   dinner.getAll = function () {\n      return db.query.get( ref.dinner );\n   };\n\n   dinner.getMessages = function (dinnerId) {\n      return db.query.get( ref.message.orderByChild('toDinner').equalTo(dinnerId) );\n   };\n\n   dinner.getReviews = function (dinnerId) {\n      return db.query.get( ref.review.orderByChild('aboutDinner').equalTo(dinnerId) );\n   };\n\n   dinner.createMessage = function (message) {\n      return $q(function resolver (resolve) {\n         message = _.cloneDeep(message);\n         checkObject(message, 'createdAt', 'byUser', 'text');\n         message.createdAt = Firebase.ServerValue.TIMESTAMP;\n         // TODO: either toDinner or toGroup needs to be set.\n         resolve( db.query.create(ref.message.push(message)) );\n      });\n   };\n\n\n   /*\n    * DINNER (Host)\n    *\n    * new dinner (C dinner)\n    * close dinner (U dinner)\n    * cancel dinner (U dinner)\n    * x invite user (C invitation)\n    * x invite group (C invitation)\n    * accept/reject application (U applicaton)\n    *\n    * x users that are invited\n    *\n    */\n\n   // create a new dinner\n   // fulfills with the new dinnerId, rejects with the error\n   // TODO: test\n   dinner.create = function (dinner) {\n      return $q(function resolver (resolve) {\n         dinner = _.cloneDeep(dinner); // don't modify the passed data\n         checkObject(dinner, 'hostedByUser', 'title', 'description', 'tags', 'isPublic'); // can throw and thus reject this promise\n         // TODO: check for dineinAt or (takeawayFrom and takeawayUntil)\n         dinner.createdAt = Firebase.ServerValue.TIMESTAMP;\n         resolve( db.query.push(ref.dinner, dinner) );\n      });\n   };\n\n   // TODO: test\n   // TODO: can't close if cancelled, only possible if host of dinner\n   dinner.close = function (dinnerId) {\n      var dinner = {\n         // dinnerId : dinnerId,\n         updatedAt : Firebase.ServerValue.TIMESTAMP,\n         closedAt : Firebase.ServerValue.TIMESTAMP\n      };\n      return db.query.update( ref.dinner.child(dinnerId), dinner );\n   };\n\n   // TODO: test\n   // TODO: only possible if host of dinner\n   dinner.cancel = function (dinnerId) {\n      var dinner = {\n         // dinnerId : dinnerId,\n         updatedAt : Firebase.ServerValue.TIMESTAMP,\n         cancelledAt : Firebase.ServerValue.TIMESTAMP\n      };\n      return db.query.update( ref.dinner.child(dinnerId), dinner );\n   };\n\n   // TODO: test\n   // TODO: only possible if host of dinner\n   dinner.acceptApplication = function (applicationId) {\n      var application = {\n         updatedAt : Firebase.ServerValue.TIMESTAMP,\n         status : 'accepted'\n      };\n      return db.query.update( ref.application.child(applicationId), application );\n   };\n\n   // TODO: test\n   // TODO: only possible if host of dinner\n   dinner.rejectApplication = function (applicationId) {\n      var application = {\n         updatedAt : Firebase.ServerValue.TIMESTAMP,\n         status : 'rejected'\n      };\n      return db.query.update( ref.application.child(applicationId), application );\n   };\n\n\n   /*\n    * DINNER (Guest)\n    *\n    * apply (C application)\n    * x accept invitation (U invitation)\n    *\n    */\n\n   // TODO: test\n   dinner.createApplication = function (application) {\n      return $q(function(resolve) {\n         application = _.cloneDeep(application); // don't modify the passed data\n         checkObject(application, 'byUser', 'forDinner', 'numSpots', 'isDineIn', 'isPublic');\n         // TODO: what about host property?\n         // TODO: cant apply to own dinner, can't apply to closed or cancelled or past dinner.\n         application.createdAt = Firebase.ServerValue.TIMESTAMP;\n         application.status = 'pending';\n         resolve(\n            db.query.push(ref.application, application)\n         );\n      });\n   };\n\n   dinner.createReview = function (review) {\n      return $q(function resolver (resolve) {\n         review = _.cloneDeep(review);\n         checkObject(review, 'byUser', 'text', 'aboutDinner', 'aboutUser');\n         review.createdAt = Firebase.ServerValue.TIMESTAMP;\n         // TODO: either toDinner or toGroup needs to be set.\n         resolve( db.query.push(ref.review, review) );\n      });\n   };\n\n   dinner.createMessage = function (message) {\n      return $q(function resolver (resolve) {\n         message = _.cloneDeep(message);\n         checkObject(message, 'byUser', 'text', 'toDinner');\n         message.createdAt = Firebase.ServerValue.TIMESTAMP;\n         delete message.toGroup;\n         resolve( db.query.push(ref.message, message) );\n      });\n   };\n\n   return dinner;\n}]);\n","angular.module('dc.db.user', ['dc.db.base'])\n\n.factory('dbUser', ['dbBase', '$q', function(dbBase, $q) {\n   var db = dbBase;\n   var fb = db.ref.root;\n   var ref = db.ref;\n   var checkObject = db.util.checkObject;\n\n   /*\n    * USER\n    *\n    * new user (C)\n    * change settings (U)\n    * add photo (C)\n    * remove photo (D)\n    * reorder photo (U)\n    *\n    *\n    *\n    * friends of this user\n    * user data incl. settings\n    * gallery pictures\n    *\n    *\n    * dinners hosted by this user\n    * dinners the user applied to/was accepted to/was rejected from (mutually excl.)\n    * dinners invited to\n    *\n    * groups with member status\n    * groups with admin status\n    * notifications received\n    * reviews of dinners hosted by this user\n    *\n    */\n\n\n   ref.user = fb.child('user');\n   ref.notification = fb.child('notification');\n   var user = {};\n\n   /*\n      create a user record\n      user needs to have userId (obtained from auth.createUser and auth.login)\n      other fields are optional, the ones that are present are updated\n    */\n   user.create = function (user) {\n      user = _.cloneDeep(user); // don't modify the passed data\n      return $q(function (resolve, reject) {\n         checkObject(user, 'userId', 'firstName', 'lastName', 'email');\n         user.createdAt = Firebase.ServerValue.TIMESTAMP;\n         ref.user.child(user.userId).set(user, function onComplete(error) {\n            if (error === null) resolve();\n            else reject(error);\n         });\n      });\n   };\n\n   /*\n      update user data\n      user needs to have userId\n      other fields are optional, the ones that are present are updated\n    */\n   user.update = function (user) {\n      user = _.cloneDeep(user); // don't modify the passed data\n\n      return $q(function (resolve, reject) {\n         checkObject(user, 'userId');\n         user.updatedAt = Firebase.ServerValue.TIMESTAMP;\n         ref.user.child(user.userId).update(user, function onComplete(error) {\n            if (error === null) resolve();\n            else reject(error);\n         });\n      });\n   };\n\n   user.updateSettings = function (userId, settings) {\n      return db.query.update( ref.user.child(userId).child('settings'), settings );\n   };\n\n   user.createImage = function () {\n\n   };\n\n   user.deleteImage = function () {\n\n   };\n\n   user.reorderImage = function () {\n\n   };\n\n   user.getFriends = function (userId) {\n      return db.query.get( ref.user.child(userId).child('friends') );\n   };\n\n   // user data incl. settings and pics\n   user.get = function (userId) {\n      return db.query.get( ref.user.child(userId) );\n   };\n\n   user.getNotifications = function (userId) {\n      return db.query.get(\n         ref.notification.orderByChild('forUser').equalTo(userId)\n      );\n   };\n\n   return user;\n}]);\n"],"sourceRoot":"/source/"}