{"version":3,"sources":["app.js","app.dev.js","controllers.js","db-firebase.js","directives.js","filters.js","services.js"],"names":["angular","module","config","$stateProvider","state","url","abstract","templateUrl","views","mainContent","run","$ionicPlatform","ready","window","cordova","plugins","Keyboard","hideKeyboardAccessoryBar","StatusBar","styleDefault","$urlRouterProvider","controller","onEnter","logout","otherwise","c","console","log","$scope","db","$rootScope","$state","login","user","signup","auth","createUser","then","userId","firstName","lastName","email","create","error","bindPending","password","code","resumeSession","update","mapCreated","map","$stateParams","getUserData","getUserDinners","dinners","util","dinner","isPublic","hostedByUser","go","fromNow","takeawayFrom","now","takeawayUntil","getDinnersSync","getBeginTime","time","dinein","enabled","takeaway","from","application","count","getDinnerSync","dinnerId","applications","getDinnerApplicationsSync","addCount","min","max","newCount","apply","uid","$id","newApplication","applicationState","forEach","isHost","acceptApplication","a","updateApplicationState","declineApplication","value","Firebase","factory","$q","$firebase","fb","checkObject","obj","properties","settings","checkArguments","undefined","Error","Array","isArray","prototype","slice","call","arguments","p","createError","name","message","ref","root","getRefURL","toString","unauthorized","notFound","query","set","data","resolve","reject","push","newRef","key","get","once","dataSnapshot","val","credentials","authWithPassword","session","onAuth","offAuth","unauth","getCurrentSession","getAuth","child","notification","_","cloneDeep","createdAt","ServerValue","TIMESTAMP","updatedAt","updateSettings","createImage","deleteImage","reorderImage","getFriends","getNotifications","orderByChild","equalTo","friendRequest","send","byUser","toUser","status","accept","friendRequestId","getIncoming","getOutgoing","review","orderByKey","getMessages","getReviews","createMessage","close","closedAt","cancel","cancelledAt","applicationId","rejectApplication","createApplication","createReview","toGroup","markAsRead","notificationId","openedAt","directive","restrict","scope","onCreate","link","$element","initialize","mapOptions","center","google","maps","LatLng","zoom","mapTypeId","MapTypeId","ROADMAP","streetViewControl","Map","event","addDomListener","e","preventDefault","document","readyState","element","attr","dot","className","showClassName","html","append","$watch","pendingDots","newVal","addClass","removeClass","f","filter","s","friends","id","all","friendId","offsetMins","n","Date","d","getTime","getTimezoneOffset","promise","done"],"mappings":"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","file":"app.min.js","sourcesContent":["// angular.module is a global place for creating, registering and retrieving Angular modules\n// 'starter' is the name of this angular module example (also set in a <body> attribute in index.html)\n// the 2nd parameter is an array of 'requires'\n// 'starter.services' is found in services.js\n// 'starter.controllers' is found in controllers.js\n\nangular.module('dc', ['ionic', 'dc.controllers', 'dc.services', 'dc.filters', 'dc.db', 'dc.directives', 'dc.dev'])\n\n.run(function($ionicPlatform) {\n   $ionicPlatform.ready(function() {\n      // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard\n      // for form inputs)\n      if (window.cordova && window.cordova.plugins.Keyboard) {\n         cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\n      }\n      /* global StatusBar */\n      if (window.StatusBar) {\n         // org.apache.cordova.statusbar required\n         StatusBar.styleDefault();\n      }\n   });\n})\n\n.config(function($stateProvider, $urlRouterProvider) {\n\n   // Ionic uses AngularUI Router which uses the concept of states\n   // Learn more here: https://github.com/angular-ui/ui-router\n   // Set up the various states which the app can be in.\n   // Each state's controller can be found in controllers.js\n   $stateProvider\n\n   .state('login', {\n      url: '/login',\n      templateUrl: 'templates/login.html',\n      controller: 'LoginCtrl'\n   })\n\n   .state('logout', {\n      url: '/logout',\n      onEnter: function(logout) {\n         logout();\n      }\n   })\n\n   .state('signup', {\n      url: '/signup',\n      templateUrl: 'templates/signup.html',\n      controller: 'SignupCtrl'\n   })\n\n\n   .state('app', {\n      url: '/app',\n      abstract: true,\n      templateUrl: 'templates/menu.html',\n      controller: 'AppCtrl'\n   })\n\n   .state('app.settings', {\n      url: '/settings',\n      views: {\n         'mainContent': {\n            templateUrl: 'templates/settings.html',\n            controller: 'SettingsCtrl'\n         }\n      }\n   })\n\n   .state('app.newdinner', {\n      url: \"/newdinner\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/newdinner.html\",\n            controller: \"NewDinnerCtrl\"\n         }\n      }\n   })\n\n   .state('app.lookfor', {\n      url: \"/lookfor\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/lookfor.html\"\n            // controller: 'LookForDinnersCtrl' // FIXME\n         }\n      }\n   })\n\n   .state('app.user', {\n      url: \"/user/:userId\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/profile.html\"\n            // controller: 'UserCtrl'\n         }\n      }\n   })\n\n\n   .state('app.dinner', {\n      url: \"/dinner/:dinnerId\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/dinner.html\"\n            // controller: 'DinnerCtrl'\n         }\n      }\n   });\n\n\n   // if none of the above states are matched, use this as the fallback\n   $urlRouterProvider.otherwise('/login');\n});\n","\nangular.module( 'dc.dev', [] )\n\n.config(function($stateProvider) {\n   $stateProvider\n\n   .state('dev', {\n      url: '/dev',\n      abstract: true,\n      templateUrl: 'templates/menu.html'\n   })\n\n   .state('dev.menu', {\n      url: \"/menu\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/developer.html\"\n         }\n      }\n   })\n\n   .state('dev.login', {\n      url: \"/login\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/login.html\"\n         }\n      }\n   })\n\n   .state('dev.signup', {\n      url: \"/signup\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/signup.html\"\n         }\n      }\n   })\n\n   .state('dev.newdinner', {\n      url: \"/newdinner\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/newdinner.html\"\n         }\n      }\n   })\n\n   .state('dev.lookfor', {\n      url: \"/lookfor\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/lookfor.html\"\n         }\n      }\n   })\n\n   .state('dev.lookfor_filter', {\n      url: \"/lookfor_filter\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/lookfor_filter.html\"\n         }\n      }\n   })\n\n   .state('dev.profile', {\n      url: \"/profile\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/profile.html\"\n         }\n      }\n   })\n\n   .state('dev.dinner', {\n      url: \"/dinner\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/dinner.html\"\n         }\n      }\n   })\n\n   .state('dev.settings', {\n      url: \"/settings\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/settings.html\"\n         }\n      }\n   })\n\n   .state('dev.notifications', {\n      url: \"/notifications\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/notifications.html\"\n         }\n      }\n   })\n\n   .state('dev.dinner_list', {\n      url: \"/dinner_list\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/dinner_list.html\"\n         }\n      }\n   })\n\n   .state('dev.person_list', {\n      url: \"/person_list\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/person_list.html\"\n         }\n      }\n   })\n\n   .state('dev.person_list_interactive', {\n      url: \"/person_list_interactive\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/person_list_interactive.html\"\n         }\n      }\n   })\n\n   .state('dev.confirm_application', {\n      url: \"/confirm_application\",\n      views: {\n         'mainContent': {\n            templateUrl: \"templates/confirm_application.html\"\n         }\n      }\n   });\n\n});\n","var c = angular.module( 'dc.controllers', ['dc.services'] );\n\n\n// c.controller('AppCtrl', function($scope, $ionicModal, $timeout) {\nc.controller('AppCtrl', function() {\n\tconsole.log('Controller: app');\n});\n\n\n/**\n * Sign up\n */\nc.controller('SignupCtrl', function($scope, db, $rootScope, $state, login) {\n\tconsole.log('Controller: signup');\n\t$scope.user = {};\n\n\t$scope.signup = function() {\n\t\tconsole.log('signing up', $scope.user);\n\t\tvar user;\n\t\tdb.auth.createUser($scope.user)\n\t\t.then(function(userId) {\n\t\t\tuser = {\n\t\t\t\tuserId: userId,\n\t\t\t\tfirstName: $scope.user.firstName,\n\t\t\t\tlastName: $scope.user.lastName,\n\t\t\t\temail: $scope.user.email\n\t\t\t};\n\t\t\treturn db.user.create(user);\n\t\t}).then(function() {\n\t\t\tconsole.log('signup successful');\n\t\t\tlogin($scope.user);\n\t\t}).catch(function (error) {\n\t\t\tconsole.error('error signing up', error);\n\t\t});\n\t};\n});\n\n\n/**\n * Log in\n */\nc.controller('LoginCtrl', function($scope, login, bindPending) {\n\tconsole.log('Controller: login');\n\n\t$scope.user = {};\n\t$scope.user = {\n\t\t'email': 'jd@example.com',\n\t\t'password': 'asdf'\n\t};\n\n\t$scope.login = function() {\n\t\tbindPending( login($scope.user), $scope )\n\t\t.catch(function(error) {\n\t\t\t$scope.error = error.code;\n\t\t\tthrow error;\n\t\t});\n\t};\n});\n\n\n/**\n * Settings\n */\nc.controller('SettingsCtrl', function($scope, db, $rootScope, $state, resumeSession) {\n\tconsole.log('Controller: settings');\n\tresumeSession($scope);\n\n\t$scope.update = function() {\n\t\tconsole.log('updating user');\n\t\tdb.user.update($scope.user).then(function() {\n\t\t\tconsole.log('update successful');\n\t\t}, function(error) {\n\t\t\tconsole.error('update failed', error);\n\t\t});\n\t};\n\n\t$scope.mapCreated = function(map) {\n\t\t$scope.map = map;\n\t};\n});\n\n\n/* User Profile */\nc.controller('UserCtrl', function($scope, db, resumeSession, $stateParams) {\n\tresumeSession($scope);\n\tdb.getUserData($stateParams.userId).then(function(user) {\n\t\t$scope.user = user;\n\t});\n\n\tdb.getUserDinners($stateParams.userId).then(function(dinners) {\n\t\t$scope.dinners = dinners;\n\t});\n});\n\n\n/* New Dinner */\nc.controller('NewDinnerCtrl', function($scope, db, $rootScope, $state, resumeSession, util) {\n\tconsole.log('Controller: newdinner');\n\tresumeSession($scope);\n\n\t$scope.dinner = {\n\t\tisPublic: true\n\t};\n\n\tif ($scope.user) $scope.dinner.hostedByUser = $scope.user.userId;\n\n\t$scope.create = function() {\n\t\tdb.dinner.create($scope.dinner).then(function() {\n\t\t\tconsole.log('Dinner created', $scope.dinner);\n\t\t\t$state.go('app.lookfor');\n\t\t}, function(error) {\n\t\t\tconsole.error('Error creating dinner', error);\n\t\t});\n\t};\n\n\t$scope.fromNow = function() {\n\t\t$scope.dinner.takeawayFrom = util.now();\n\t\t$scope.dinner.takeawayUntil = util.now(60);\n\t};\n});\n\n\n/* Look for  Dinner */\nc.controller('LookForDinnersCtrl', function($scope, db, resumeSession) {\n\tconsole.log('Controller: lookfor');\n\tresumeSession($scope);\n\t$scope.dinners = db.getDinnersSync();\n\t//console.log('dinners', $scope.dinners);\n\n\t// TODO: remove this. use filter instea\n\t$scope.getBeginTime = function(dinner) {\n\t\tvar time;\n\t\tif (dinner.dinein && dinner.dinein.enabled) time = dinner.dinein.time;\n\t\telse if (dinner.takeaway && dinner.takeaway.enabled) time = dinner.takeaway.from;\n\t\treturn time;\n\t};\n});\n\n\n/* Dinner */\nc.controller('DinnerCtrl', function($scope, db, resumeSession, $stateParams) {\n\tresumeSession($scope);\n\n\t$scope.application = { count:1 };\n\t$scope.dinner = db.getDinnerSync($stateParams.dinnerId);\n\t$scope.applications = db.getDinnerApplicationsSync($stateParams.dinnerId);\n\n\t$scope.addCount = function(count, min, max) {\n\t\tvar newCount = $scope.application.count += count;\n\t\tif (newCount < min) newCount = min;\n\t\telse if (newCount > max) newCount = max;\n\t\t$scope.application.count = newCount;\n\t};\n\n\t$scope.apply = function(dinein) {\n\t\tif (dinein) $scope.application.dinein = true;\n\t\telse $scope.application.dinein = false;\n\t\t$scope.application.userId = $scope.user.uid;\n\t\t$scope.application.dinnerId = $scope.dinner.$id;\n\t\tdb.newApplication($scope.application).then(function(application) {\n\t\t\tconsole.log('application created:', application);\n\t\t\t// $state.go('app.dinner', {dinnerId: application.dinnerId});\n\t\t}, function(error) {\n\t\t\tconsole.log('error creating application:', error);\n\t\t});\n\t};\n\n\t$scope.applicationState = function() {\n\t\tvar state = \"\";\n\t\tangular.forEach($scope.applications, function(application) {\n\t\t\tif (application.userId === $scope.user.uid) {\n\t\t\t\t//console.log(application);\n\t\t\t\tstate = application.state;\n\t\t\t\t$scope.application = application;\n\t\t\t}\n\t\t});\n\t\treturn state;\n\t};\n\n\t$scope.isHost = function() {\n\t\treturn ($scope.user && $scope.dinner.user === $scope.user.uid);\n\t};\n\n\t$scope.acceptApplication = function(a) {\n\t\ta.state = 'accepted';\n\t\tdb.updateApplicationState(a.$id, 'accepted').then(function() {\n\t\t\tconsole.log('application accepted');\n\t\t}, function(error) {\n\t\t\tconsole.error('error accepting application', error);\n\t\t});\n\t};\n\t$scope.declineApplication = function(a) {\n\t\ta.state = 'declined';\n\t\tdb.updateApplicationState(a.$id, 'declined').then(function() {\n\t\t\tconsole.log('application declined');\n\t\t}, function(error) {\n\t\t\tconsole.error('error declining application', error);\n\t\t});\n\t};\n});\n","angular.module('dc.db', ['firebase'])\n\n.value( 'fb', new Firebase(\"https://dinner-collective.firebaseio.com/\") ) // define firebase ref as value service so it can be overridden easily\n\n.factory('db', ['$rootScope', '$q', '$firebase', 'fb' , function($rootScope, $q, $firebase, fb) {\n\n   var ref = { root: fb }; // store firebase references. place the main ref in there as 'root' as well, even though is shorter just to use 'fb'\n\n   var db = {}; // the db interface to be exported (as 'db')\n   db.ref = ref; // make refs available for testing\n   db.settings = {};\n   db.settings.checkArguments = false; // set true to check arguments using the checkObject function\n\n   db.util = {};\n   /**\n    * Get current firebase URL. Used for testing.\n    * @return {String} - URL of the firebase reference currently in use.\n    */\n   db.util.getRefURL = function() {\n      return fb.toString();\n   };\n\n   // check that an object is defined and optionally has some defined properties\n   // properties can be given as array of strings or as separate string arguments\n   function checkObject (obj, properties) {\n      if ( ! db.settings.checkArguments ) return true;\n      // check obj itself\n      if ( typeof obj != 'object' || obj == undefined ) {\n         throw new Error(obj + ' is expected to be an object.');\n      }\n      // if properties is not given or is not an array, create the properties array from arguments\n      if ( properties == undefined || !Array.isArray(properties) ) { // == undefined tests for null and undefined\n         properties = Array.prototype.slice.call(arguments, 1);\n      }\n      // check properties\n      properties.forEach( function checkProperties (p) {\n         if ( obj[p] === undefined ) {\n            throw new Error(obj.p + ' is expected to be defined.');\n         }\n      });\n      return true;\n   }\n   db.util.checkObject = checkObject; // make it available for testing\n\n   // TODO: complete\n   // function checkObjectAlt(obj, propLists) {\n   //    if ( ! db.settings.checkArguments ) return true;\n   //    // check obj itself\n   //    if ( typeof obj != 'object' || obj == undefined ) {\n   //       throw new Error(obj + ' is expected to be an object.');\n   //    }\n   //\n   // }\n\n\n   function createError (name, message) {\n      var error = new Error(message);\n      error.name = name;\n      return error;\n   }\n   db.util.createError = createError;\n\n   db.error = {\n      unauthorized : 'UNAUTHORIZED',\n      notFound : 'NOT_FOUND'\n   };\n\n/*\n * queries can be grouped due to different criteria:\n * technical type (create, update, delete)\n * by context (the view where they might be used)\n * by the data they operate on (type created or returned)\n *\n * general API considerations\n */\n\n\n/**\n * TODO: return defined errors\n * TODO: move errors and util functions to a seperat file\n * TODO: firebase query helpers: push obj + return id, update object, get by id, get by child\n *\n */\n\n\n/**\n * @callback successCallback\n * @param result - The result.\n */\n\n/**\n * @callback errorCallback\n * @param reason - The rejection reason.\n */\n\n/**\n * @callback callback\n */\n\n/**\n * Calls one of the success or error callbacks asynchronously as soon as the result is available.\n * @typedef {function} thenFunction\n * @param {successCallback}\n * @param {errorCallback}\n * @returns {Promise} - This promise is fulfilled with the return value of either callback. It is rejected with the error if either callback throws an exception.\n */\n\n/**\n * Sugar for Promise.then(undefined, errorCallback)\n * @typedef {function} catchFunction\n * @param {errorCallback}\n * @returns {Promise} - This promise is fulfilled with the return value of the error callback.\n */\n\n/**\n * Calls the callback as soon as the promise is either fulfilled or rejected. Useful for cleanup.\n * @typedef {function} finallyFunction\n * @param {callback}\n */\n\n/**\n * Angular Promise. Usually from the $q service.\n * @typedef {Object} Promise\n * @property {thenFunction} then\n * @property {catchFunction} catch\n * @property {finallyFunction} finally\n */\n\n\n/*\n * generic firebase query functions\n * using angular promises\n */\ndb.query = {};\n\ndb.query.set = function set (ref, data) {\n   return $q(function resolver (resolve, reject) {\n      ref.set(data, function onComplete (error) {\n         if (error === null) {\n            resolve();\n         } else {\n            reject(error);\n         }\n      });\n   });\n};\n\ndb.query.push = function push (ref, data) {\n   return $q(function resolver (resolve, reject) {\n      var newRef = ref.push(data, function onComplete (error) {\n         if (error === null) {\n            resolve(newRef.key());\n         } else {\n            reject(error);\n         }\n      });\n   });\n};\n\ndb.query.update = function update (ref, data) {\n   return $q(function resolver (resolve, reject) {\n      ref.update(data, function onComplete (error) {\n         if (error === null) {\n            resolve();\n         } else {\n            reject(error);\n         }\n      });\n   });\n};\n\ndb.query.get = function get (ref) {\n   return $q(function resolver (resolve, reject) {\n      ref.once('value', function callback (dataSnapshot) {\n         var data = dataSnapshot.val();\n         if (data === null) {\n            reject( createError(db.error.notFound, 'db.query.get: no data.') );\n         } else {\n            resolve(data);\n         }\n      }, function cancelCallback (error) {\n         reject( createError(db.error.unauthorized, error.message) );\n      });\n   });\n};\n\n/*\n * AUTHENTICATION\n *\n * login user\n * logout user\n * current session\n *\n */\n\n/**\n * @typedef {Object} UserCredentials\n * @property {string} email\n * @property {string} password\n */\n\ndb.auth = {};\n/**\n * Create a new user\n * @param {Object} user\n * email, password\n * @return {Promise} - user id on success. Error message on error.\n */\ndb.auth.createUser = function (credentials) {\n   return $q(function resolver (resolve, reject) {\n      fb.createUser(credentials, function onComplete (error, user) {\n         if (error === null) {\n            resolve(user.uid);\n         } else {\n            reject(error);\n         }\n      });\n   });\n};\n\n/**\n * Login a user with email and password.\n * @param {UserCredentials} credentials\n * email, password\n * @return {Promise} - user id on success. error object on error.\n */\ndb.auth.login = function (credentials) {\n   return $q(function resolver (resolve, reject) {\n     fb.authWithPassword(credentials, function onComplete (error, session) {\n       if (error === null) {\n          resolve(session.uid, session);\n       } else {\n          reject(error);\n       }\n     });\n   });\n};\n\ndb.auth.logout = function () {\n   return $q(function resolver (resolve) {\n      fb.onAuth(function onAuth (session) {\n         if (session === null) {\n            fb.offAuth(onAuth);\n            resolve();\n         }\n      });\n      fb.unauth();\n   });\n};\n\n/**\n * [getCurrentSession description]\n * @return {Promise} - user id on success.\n */\ndb.auth.getCurrentSession = function () {\n   return $q(function resolver (resolve, reject) {\n      var session = fb.getAuth(); // sync\n      // console.log('current session:', session);\n      if (session === null) {\n         // console.log('rejecting');\n         reject();\n      } else {\n         // console.log('resolving');\n         resolve(session.uid);\n      }\n   });\n};\n\n\n/*\n * USER\n *\n * new user (C)\n * change settings (U)\n * add photo (C)\n * remove photo (D)\n * reorder photo (U)\n *\n *\n *\n * friends of this user\n * user data incl. settings\n * gallery pictures\n *\n *\n * dinners hosted by this user\n * dinners the user applied to/was accepted to/was rejected from (mutually excl.)\n * dinners invited to\n *\n * groups with member status\n * groups with admin status\n * notifications received\n * reviews of dinners hosted by this user\n *\n */\n\n\nref.user = fb.child('user');\nref.notification = fb.child('notification');\ndb.user = {};\n\n/*\n   create a user record\n   user needs to have userId (obtained from auth.createUser and auth.login)\n   other fields are optional, the ones that are present are updated\n */\ndb.user.create = function (user) {\n   user = _.cloneDeep(user); // don't modify the passed data\n   return $q(function (resolve, reject) {\n      checkObject(user, 'userId', 'firstName', 'lastName', 'email');\n      user.createdAt = Firebase.ServerValue.TIMESTAMP;\n      ref.user.child(user.userId).set(user, function onComplete(error) {\n         if (error === null) resolve();\n         else reject(error);\n      });\n   });\n};\n\n/*\n   update user data\n   user needs to have userId\n   other fields are optional, the ones that are present are updated\n */\ndb.user.update = function (user) {\n   user = _.cloneDeep(user); // don't modify the passed data\n\n   return $q(function (resolve, reject) {\n      checkObject(user, 'userId');\n      user.updatedAt = Firebase.ServerValue.TIMESTAMP;\n      ref.user.child(user.userId).update(user, function onComplete(error) {\n         if (error === null) resolve();\n         else reject(error);\n      });\n   });\n};\n\ndb.user.updateSettings = function (userId, settings) {\n   return db.query.update( ref.user.child(userId).child('settings'), settings );\n};\n\ndb.user.createImage = function () {\n\n};\n\ndb.user.deleteImage = function () {\n\n};\n\ndb.user.reorderImage = function () {\n\n};\n\ndb.user.getFriends = function (userId) {\n   return db.query.get( ref.user.child(userId).child('friends') );\n};\n\n// user data incl. settings and pics\ndb.user.get = function (userId) {\n   return db.query.get( ref.user.child(userId) );\n};\n\ndb.user.getNotifications = function (userId) {\n   return db.query.get(\n      ref.notification.orderByChild('forUser').equalTo(userId)\n   );\n};\n\n\n/*\n * FRIEND REQUESTS\n *\n * send friend request (U)\n * accept friend request (U)\n * friend requests received\n *\n */\ndb.friendRequest = {};\nref.friendRequest = fb.child('friendRequest');\n\n// TODO: test\n// TODO: check that users exist\ndb.friendRequest.send = function (byUser, toUser) {\n   // TODO: check values\n   var friendRequest = {\n      createdAt : Firebase.ServerValue.TIMESTAMP,\n      byUser : byUser,\n      toUser : toUser,\n      status : 'pending'\n   };\n   return db.query.push( ref.friendRequest, friendRequest );\n};\n\n// TODO: test\n// TODO: only if toUser is sending the request\ndb.friendRequest.accept = function (friendRequestId) {\n   var friendRequest = {\n      updatedAt : Firebase.ServerValue.TIMESTAMP,\n      status : 'accepted'\n   };\n   return db.query.update(\n      ref.friendRequest.child(friendRequestId),\n      friendRequest\n   );\n};\n\n// TODO: test\n// TODO: only if toUser is sending the request\ndb.friendRequest.reject = function (friendRequestId) {\n   var friendRequest = {\n      updatedAt : Firebase.ServerValue.TIMESTAMP,\n      status : 'rejected'\n   };\n   return db.query.update(\n      ref.friendRequest.child(friendRequestId),\n      friendRequest\n   );\n};\n\n// TODO: test\n// TODO: only if userId is sending the request\ndb.friendRequest.getIncoming = function (userId) {\n   return db.query.get(\n      ref.friendRequest.orderByChild('toUser').equalTo(userId)\n   );\n};\n\n// TODO: test\n// TODO: only if userId is sending the request\ndb.friendRequest.getOutgoing = function (userId) {\n   return db.query.get(\n      ref.friendRequest.orderByChild('fromUser').equalTo(userId)\n   );\n};\n\n\n\n/*\n * DINNER (All)\n *\n *\n * basic info (title, description, address, time, ...)\n * users that applied/were accepted/were rejected (mutally excl.)\n * messages posted regarding this dinner\n * reviews of this dinner\n *\n */\n\ndb.dinner = {};\nref.dinner = fb.child('dinner');\nref.application = fb.child('application');\nref.message = fb.child('message');\nref.review = fb.child('review');\n\ndb.dinner.get = function (dinnerId) {\n   return db.query.get(\n      ref.dinner.orderByKey().equalTo(dinnerId)\n   );\n};\n\ndb.dinner.getMessages = function (dinnerId) {\n   return db.query.get( ref.message.orderByChild('toDinner').equalTo(dinnerId) );\n};\n\ndb.dinner.getReviews = function (dinnerId) {\n   return db.query.get( ref.review.orderByChild('aboutDinner').equalTo(dinnerId) );\n};\n\ndb.dinner.createMessage = function (message) {\n   return $q(function resolver (resolve) {\n      message = _.cloneDeep(message);\n      checkObject(message, 'createdAt', 'byUser', 'text');\n      message.createdAt = Firebase.ServerValue.TIMESTAMP;\n      // TODO: either toDinner or toGroup needs to be set.\n      resolve( db.query.create(ref.message.push(message)) );\n   });\n};\n\n\n/*\n * DINNER (Host)\n *\n * new dinner (C dinner)\n * close dinner (U dinner)\n * cancel dinner (U dinner)\n * x invite user (C invitation)\n * x invite group (C invitation)\n * accept/reject application (U applicaton)\n *\n * x users that are invited\n *\n */\n\n// create a new dinner\n// fulfills with the new dinnerId, rejects with the error\n// TODO: test\ndb.dinner.create = function (dinner) {\n   return $q(function resolver (resolve) {\n      dinner = _.cloneDeep(dinner); // don't modify the passed data\n      checkObject(dinner, 'hostedByUser', 'title', 'description', 'tags', 'isPublic'); // can throw and thus reject this promise\n      // TODO: check for dineinAt or (takeawayFrom and takeawayUntil)\n      dinner.createdAt = Firebase.ServerValue.TIMESTAMP;\n      resolve( db.query.push(ref.dinner, dinner) );\n   });\n};\n\n// TODO: test\n// TODO: can't close if cancelled, only possible if host of dinner\ndb.dinner.close = function (dinnerId) {\n   var dinner = {\n      // dinnerId : dinnerId,\n      updatedAt : Firebase.ServerValue.TIMESTAMP,\n      closedAt : Firebase.ServerValue.TIMESTAMP\n   };\n   return db.query.update( ref.dinner.child(dinnerId), dinner );\n};\n\n// TODO: test\n// TODO: only possible if host of dinner\ndb.dinner.cancel = function (dinnerId) {\n   var dinner = {\n      // dinnerId : dinnerId,\n      updatedAt : Firebase.ServerValue.TIMESTAMP,\n      cancelledAt : Firebase.ServerValue.TIMESTAMP\n   };\n   return db.query.update( ref.dinner.child(dinnerId), dinner );\n};\n\n// TODO: test\n// TODO: only possible if host of dinner\ndb.dinner.acceptApplication = function (applicationId) {\n   var application = {\n      updatedAt : Firebase.ServerValue.TIMESTAMP,\n      status : 'accepted'\n   };\n   return db.query.update( ref.application.child(applicationId), application );\n};\n\n// TODO: test\n// TODO: only possible if host of dinner\ndb.dinner.rejectApplication = function (applicationId) {\n   var application = {\n      updatedAt : Firebase.ServerValue.TIMESTAMP,\n      status : 'rejected'\n   };\n   return db.query.update( ref.application.child(applicationId), application );\n};\n\n\n/*\n * DINNER (Guest)\n *\n * apply (C application)\n * x accept invitation (U invitation)\n *\n */\n\n// TODO: test\ndb.dinner.createApplication = function (application) {\n   return $q(function(resolve) {\n      application = _.cloneDeep(application); // don't modify the passed data\n      checkObject(application, 'byUser', 'forDinner', 'numSpots', 'isDineIn', 'isPublic');\n      // TODO: what about host property?\n      // TODO: cant apply to own dinner, can't apply to closed or cancelled or past dinner.\n      application.createdAt = Firebase.ServerValue.TIMESTAMP;\n      application.status = 'pending';\n      resolve(\n         db.query.push(ref.application, application)\n      );\n   });\n};\n\ndb.dinner.createReview = function (review) {\n   return $q(function resolver (resolve) {\n      review = _.cloneDeep(review);\n      checkObject(review, 'byUser', 'text', 'aboutDinner', 'aboutUser');\n      review.createdAt = Firebase.ServerValue.TIMESTAMP;\n      // TODO: either toDinner or toGroup needs to be set.\n      resolve( db.query.push(ref.review, review) );\n   });\n};\n\ndb.dinner.createMessage = function (message) {\n   return $q(function resolver (resolve) {\n      message = _.cloneDeep(message);\n      checkObject(message, 'byUser', 'text', 'toDinner');\n      message.createdAt = Firebase.ServerValue.TIMESTAMP;\n      delete message.toGroup;\n      resolve( db.query.push(ref.message, message) );\n   });\n};\n\n\n/*\n * MESSAGE\n *\n * post message to dinner (C message)\n * post message to group (C message)\n *\n */\n// db.createDinnerMessage = function (message) {\n//\n// };\n//\n// db.createGroupMessage = function (message) {\n//\n// };\n\n\n/*\n * NOTIFICATION\n *\n * post notification (C notification)\n * mark as read (U notification)\n *\n */\n\ndb.notification = {};\n\ndb.notification.create = function (notification) {\n   return function resolver (resolve) {\n      notification = _.cloneDeep(notification);\n      checkObject( notification, 'forUser', 'type', 'text', 'aboutUser' );\n       notification = Firebase.ServerValue.TIMESTAMP;\n      // TODO: either toDinner or toGroup needs to be set.\n      resolve( db.query.create(ref.notification.push(notification)) );\n   };\n};\n\ndb.notification.markAsRead = function (notificationId) {\n   return function resolver (resolve) {\n      var notification = {\n         openedAt : Firebase.ServerValue.TIMESTAMP\n      };\n      resolve( db.query.update(notificationId, notification) );\n   };\n};\n\n\n\n/*\n * REVIEW\n *\n * post review (C review)\n *\n */\n\ndb.createReview = function (review) {\n   return function resolver (resolve) {\n      checkObject(review, 'byUser', 'text');\n      // TODO: either aboutDinner or aboutUser needs to be set.\n      resolve( db.query.push(ref.review, review) );\n   };\n};\n\n\n/*\n * GROUP\n *\n * create new group (C group)\n * invite user to group (U user)\n * accept/reject group invitation (U group)\n * join group (U group)\n * leave group (U group)\n * add admin (U group)\n *\n * basic info (title, description, invite only status, ...)\n * admins\n * members\n * messages regarding this group\n *\n */\n// db.group = {};\n//\n// db.group.create = function (group) {\n//\n// };\n//\n// db.group.inviteUser = function (group) {\n//\n// };\n//\n// db.group.join = function (groupId) {\n//\n// };\n//\n// db.group.leave = function (groupId) {\n//\n// };\n//\n// db.group.get = function (group) {\n//\n// };\n//\n// db.group.getMembers = function (group) {\n//\n// };\n//\n// db.group.getAdmins = function (group) {\n//\n// };\n//\n// db.group.getMessages = function (group) {\n//\n// };\n\n\n\n\n   return db;\n}]);\n","angular.module('dc.directives', [])\n\n.directive('map', function() {\n   /* global google */\n   return {\n      restrict: 'E',\n      scope: {\n         onCreate: '&'\n      },\n      link: function($scope, $element) {\n         function initialize() {\n            var mapOptions = {\n               center: new google.maps.LatLng(48.2085, 16.373),\n               zoom: 16,\n               mapTypeId: google.maps.MapTypeId.ROADMAP,\n               streetViewControl: false\n            };\n            var map = new google.maps.Map($element[0], mapOptions);\n\n            $scope.onCreate({\n               map: map\n            });\n\n            // Stop the side bar from dragging when mousedown/tapdown on the map\n            google.maps.event.addDomListener($element[0], 'mousedown', function(e) {\n               e.preventDefault();\n               return false;\n            });\n         }\n\n         if (document.readyState === \"complete\") {\n            initialize();\n         } else {\n            google.maps.event.addDomListener(window, 'load', initialize);\n         }\n      }\n   };\n})\n\n// whenever the given expression is truthy show animated pending dots appended to the element\n.directive('pendingDots', function() {\n   return {\n      restrict: 'EA',\n      link: function(scope, element, attr) {\n         var dot = '.',\n         className = 'pending-dots',\n         showClassName = 'show-pending-dots',\n         html = '<span class=\"' + className + '\"><span class=\"dot-1\">' + dot + '</span><span class=\"dot-2\">' + dot + '</span><span class=\"dot-3\">' + dot + '</span></span>';\n         element.append(html);\n         scope.$watch(attr.pendingDots, function(newVal) {\n            if (newVal) element.addClass(showClassName);\n            else element.removeClass(showClassName);\n         });\n      }\n   };\n});\n","var f = angular.module('dc.filters', []);\n\n/* Compute the begin time of a dinner. */\nf.filter('getBeginTime', function() {\n\treturn function(dinner) {\n\t\tvar time;\n\t\tif (dinner.dinein && dinner.dinein.enabled) time = dinner.dinein.time;\n\t\telse if (dinner.takeaway && dinner.takeaway.enabled) time = dinner.takeaway.from;\n\t\treturn time;\n\t};\n});","var s = angular.module('dc.services', []);\n\n/**\n * A simple example service that returns some data.\n */\ns.factory('Friends', function() {\n\t// Might use a resource here that returns a JSON array\n\n\t// Some fake testing data\n\tvar friends = [\n\t\t{ id: 0, name: 'Scruff McGruff' },\n\t\t{ id: 1, name: 'G.I. Joe' },\n\t\t{ id: 2, name: 'Miss Frizzle' },\n\t\t{ id: 3, name: 'Ash Ketchum' }\n\t];\n\n\treturn {\n\t\tall: function() {\n\t\t\treturn friends;\n\t\t},\n\t\tget: function(friendId) {\n\t\t\t// Simple index lookup\n\t\t\treturn friends[friendId];\n\t\t}\n\t};\n});\n\ns.factory('resumeSession', function($rootScope, db, $q, $state) {\n\treturn function($scope) {\n\t\treturn db.auth.getCurrentSession()\n\t\t.then(function onFulfilled (userId) {\n\t\t\tif ($rootScope.user && $rootScope.user.uid === userId) {\n\t\t\t\t// no need to refetch user data\n\t\t\t\t$scope.user = $rootScope.user;\n\t\t\t\treturn $scope.user;\n\t\t\t} else {\n\t\t\t\tconsole.log('resuming session for user', userId);\n\t\t\t\t// fetch user data\n\t\t\t\tdb.user.get(userId).then(function(user) {\n\t\t\t\t\tconsole.log('resume successful', user);\n\t\t\t\t\t$rootScope.user = user;\n\t\t\t\t\t$scope.user = user;\n\t\t\t\t\treturn user;\n\t\t\t\t});\n\t\t\t}\n\t\t}).catch(function onRejected () {\n\t\t\t$state.go('app.login');\n\t\t});\n\t};\n});\n\ns.factory('util', function() {\n\treturn {\n\t\tnow: function(offsetMins) {\n\t\t\toffsetMins = offsetMins || 0;\n\t\t\tvar n = new Date();\n\t\t\tvar d = new Date( n.getTime() - n.getTimezoneOffset()*60000 + offsetMins*60000 );\n\t\t\t//return (d.toISOString()).substring(0,16); // text representation\n\t\t\treturn d;\n\t\t}\n\t};\n});\n\ns.factory('login', function($rootScope, db, $state) {\n\treturn function(user) {\n\t\tconsole.log(\"logging in\", user);\n\n\t\treturn db.auth.login(user).then(function(userId) {\n\t\t\tconsole.log(\"getting user\", userId);\n\t\t\tdb.user.get(userId).then(function (user) {\n\t\t\t\tconsole.log(\"login successful\", user);\n\t\t\t\t$rootScope.user = user;\n\t\t\t\t$state.go('app.settings');\n\t\t\t});\n\t\t}, function(error) {\n\t\t\tconsole.error('error logging in', error);\n\t\t\tthrow error;\n\t\t});\n\t};\n});\n\ns.factory('logout', function($rootScope, db, $state) {\n\treturn function() {\n\t\tconsole.log(\"logging out\");\n\t\t$rootScope.user = {}; // immediately remove user from scope\n\t\tdb.auth.logout().then(function() {\n\t\t\tconsole.log('logout sucessful');\n\t\t}, function (error) {\n\t\t\tconsole.error('error logging out', error);\n\t\t});\n\t\t$state.go('login'); // immediately go to login page\n\t};\n});\n\n// ping pending state of a promise to a variable $scope.name\ns.factory('bindPending', function() {\n\treturn function(promise, $scope, name) {\n\t\tif (!name) name = 'pending';\n\t\t// console.log(name);\n\n\t\tfunction done () {\n\t\t\tconsole.log('resetting isBusy');\n\t\t\t$scope[name] = false;\n\t\t}\n\t\tconsole.log('setting isBusy');\n\t\t$scope[name] = true;\n\n\t\treturn promise.then(function onResolve (value) {\n\t\t\tdone();\n\t\t\treturn value;\n\t\t}, function onReject (error) {\n\t\t\tdone();\n\t\t\tthrow error;\n\t\t});\n\t};\n});\n"],"sourceRoot":"/source/"}